[[plugins]]
repo = 'Shougo/ddc.vim'
on_event = ['InsertEnter', 'CmdlineEnter']
depends = ['denops.vim', 'nvim-lspconfig', 'mason.nvim', 'mason-lspconfig.nvim', 'ddc-ui-pum', 'ddc-source-nvim-lsp', 'pum.vim']
hook_post_source = '''
	call ddc#custom#patch_global({
	\	'ui': 'pum',
	\	'sources': ['nvim-lsp', 'around'],
	\	'sourceOptions': { 
	\		'_': {
	\			'matchers': ['matcher_head'],
	\			'sorters': ['sorter_rank']
	\		},
	\		'nvim-lsp': {
	\			'mark': 'L',
	\			'forceCompletionPattern': '\.\w*|:\w*|->\w*',
	\		},
	\		'around': {
	\			'mark': 'A'
	\		},
	\	},
	\	'autoCompleteEvents': [
	\		'InsertEnter', 'TextChangedI', 'TextChangedP', 'CmdlineChanged',
	\	],
	\	'cmdlineSources': {
	\		':': ['cmdline', 'cmdline-history', 'around']
	\	},
	\})
	inoremap <silent><expr> <TAB>
		\ pum#visible() ? '<Cmd>call pum#map#insert_relative(+1)<CR>' :
		\ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
		\ '<TAB>' : ddc#map#manual_complete()
	inoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>
	inoremap <C-n>   <Cmd>call pum#map#select_relative(+1)<CR>
	inoremap <C-p>   <Cmd>call pum#map#select_relative(-1)<CR>
	inoremap <C-y>   <Cmd>call pum#map#confirm()<CR>
	inoremap <C-e>   <Cmd>call pum#map#cancel()<CR>

	nnoremap :       <Cmd>call CommandlinePre()<CR>:
	function! CommandlinePre() abort
		cnoremap <Tab>   <Cmd>call pum#map#insert_relative(+1)<CR>
		cnoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>
		cnoremap <C-n>   <Cmd>call pum#map#insert_relative(+1)<CR>
		cnoremap <C-p>   <Cmd>call pum#map#insert_relative(-1)<CR>
		cnoremap <C-y>   <Cmd>call pum#map#confirm()<CR>
		cnoremap <C-e>   <Cmd>call pum#map#cancel()<CR>
		autocmd User DDCCmdlineLeave ++once call CommandlinePost()
		" Enable command line completion for the buffer
		call ddc#enable_cmdline_completion()
	endfunction
	function! CommandlinePost() abort
		silent! cunmap <Tab>
		silent! cunmap <S-Tab>
		silent! cunmap <C-n>
		silent! cunmap <C-p>
		silent! cunmap <C-y>
		silent! cunmap <C-e>
	endfunction
	call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-ui-pum'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-source-nvim-lsp'
on_source = ['ddc.vim', 'denops-popup_preview.vim', 'denops-popup-preview.vim']
hook_source = '''
lua << EOF
local capabilities = require("ddc_nvim_lsp").make_client_capabilities()
require("lspconfig").denols.setup({
  capabilities = capabilities,
})
EOF
'''

[[plugins]]
repo = 'Shougo/ddc-source-cmdline'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-source-cmdline-history'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-source-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/neco-vim'
on_source = 'ddc.vim'

[[plugins]]
reop = 'gelguy/wilder.nvim'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
on_event = 'InsertEnter'
hook_add = '''
call popup_preview#enable()
'''

[[plugins]]
repo = 'ray-x/lsp_signature.nvim'
on_event = 'InsertEnter'
hook_add = '''
lua << EOF
local cfg = {
}
require "lsp_signature".setup(cfg)
EOF
'''

[[plugins]]
repo = 'previm/previm'
on_command = 'PrevimOpen'
hook_add = '''
let g:previm_open_cmd = "firefox"
let g:previm_enable_realtime = 1
'''

[[plugins]]
repo = 'machakann/vim-sandwich'
rn_event = 'InsertEnter'
