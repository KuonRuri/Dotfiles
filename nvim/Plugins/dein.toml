[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'vim-denops/denops-helloworld.vim'

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
colorscheme iceberg
'''

[[plugins]]
repo = 'neovim/nvim-lspconfig'

[[plugins]]
repo = 'williamboman/mason.nvim'
hook_add = '''
lua << EOF
require("mason").setup()
EOF
'''

[[plugins]]
repo = 'williamboman/mason-lspconfig.nvim'
hook_add = '''
lua << EOF
require("mason-lspconfig").setup_handlers {
  function (server_name)
    require("lspconfig")[server_name].setup {
      on_attach = on_attach
    }
  end,
}
EOF
'''

[[plugins]]
repo = 'Shougo/ddu-ui-ff'

[[plugins]]
repo = 'Shougo/ddu-kind-file'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'

[[plugins]]
repo = 'Shougo/ddu-commands.vim'

[[plugins]]
repo = 'Shougo/ddu.vim'
hook_add = '''
call ddu#custom#patch_global({
    \   'ui': 'ff',
    \   'sources': [{'name': 'file_rec', 'params': {}}],
    \   'sourceOptions': {
    \     '_': {
    \       'matchers': ['matcher_substring'],
    \     },
    \   },
    \   'kindOptions': {
    \     'file': {
    \       'defaultAction': 'open',
	\		},
	\	},
	\   'uiParams': {
    \     'ff': {
	\		'split': 'floating',
	\		'startFilter': v:false,
    \     }
    \   },
    \ })
autocmd FileType ddu-ff call s:ddu_my_settings()
function! s:ddu_my_settings() abort
  nnoremap <buffer><silent> <CR>
        \ <Cmd>call ddu#ui#ff#do_action('itemAction')<CR>
  nnoremap <buffer><silent> <Space>
        \ <Cmd>call ddu#ui#ff#do_action('toggleSelectItem')<CR>
  nnoremap <buffer><silent> i
        \ <Cmd>call ddu#ui#ff#do_action('openFilterWindow')<CR>
  nnoremap <buffer><silent> q
        \ <Cmd>call ddu#ui#ff#do_action('quit')<CR>
endfunction

autocmd FileType ddu-ff-filter call s:ddu_filter_my_settings()
function! s:ddu_filter_my_settings() abort
  inoremap <buffer><silent> <CR>
  \ <Esc><Cmd>close<CR>
  nnoremap <buffer><silent> <CR>
  \ <Cmd>close<CR>
  nnoremap <buffer><silent> q
  \ <Cmd>close<CR>
endfunction
nnoremap <buffer><silent> <C-k>
	\	<Cmd>Ddu<CR>
'''

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'wakatime/vim-wakatime'

[[plugins]]
repo = 'Stoozy/vimcord'

[[plugins]]
repo = 'glacambre/firenvim'
hook_post_update = '''
call firenvim#install(0)
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_add = '''
lua << EOF
require'nvim-treesitter.configs'.setup {
ensure_installed = { "c", "lua", "vim", "cpp", "python", "markdown", "markdown_inline"},
sync_install = false,
auto_install = false,
highlight = {
	enable = true,
	},
}
EOF
'''

[[plugins]]
repo = 'stevearc/aerial.nvim'
hook_add = '''
lua << EOF
require('aerial').setup({
on_attach = function(bufnr)
  vim.keymap.set('n', '{', '<cmd>AerialPrev<CR>', {buffer = bufnr})
  vim.keymap.set('n', '}', '<cmd>AerialNext<CR>', {buffer = bufnr})
end
})
vim.keymap.set('n', '<C-h>', '<cmd>AerialToggle! left<CR>')
EOF
'''

[[plugins]]
repo = 'Shougo/pum.vim'
hook_add = '''
'''

[[plugins]]
repo = 'akinsho/toggleterm.nvim'
hook_add = '''
lua << EOF
require("toggleterm").setup{
	open_mapping = "<C-t>",
	start_in_insert = true,
	insert_mappings = true,
	terminal_mappings = true,
	direction = "horizontal"
}
EOF
'''

[[plugins]]
repo = 'MunifTanjim/nui.nvim'

[[plugins]]
repo = 'folke/noice.nvim'
hook_add = '''
lua << EOF
require("noice").setup({
  lsp = {
    -- override markdown rendering so that **cmp** and other plugins use **Treesitter**
    override = {
      ["vim.lsp.util.convert_input_to_markdown_lines"] = true,
      ["vim.lsp.util.stylize_markdown"] = true,
      ["cmp.entry.get_documentation"] = true,
    },
  },
  -- you can enable a preset for easier configuration
  presets = {
    bottom_search = true, -- use a classic bottom cmdline for search
    command_palette = true, -- position the cmdline and popupmenu together
    long_message_to_split = true, -- long messages will be sent to a split
    inc_rename = false, -- enables an input dialog for inc-rename.nvim
    lsp_doc_border = false, -- add a border to hover docs and signature help
  },
})
EOF
'''
