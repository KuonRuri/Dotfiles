[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'vim-denops/denops-helloworld.vim'

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
colorscheme iceberg
'''

[[plugins]]
repo = 'neovim/nvim-lspconfig'

[[plugins]]
repo = 'williamboman/mason.nvim'

[[plugins]]
repo = 'williamboman/mason-lspconfig.nvim'

[[plugins]]
repo = 'Shougo/ddu-ui-ff'

[[plugins]]
repo = 'Shougo/ddu-kind-file'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'

[[plugins]]
repo = 'Shougo/ddu-commands.vim'

[[plugins]]
repo = 'Shougo/ddu.vim'
hook_add = '''
call ddu#custom#patch_global({
    \   'ui': 'ff',
    \   'sources': [{'name': 'file_rec', 'params': {}}],
    \   'sourceOptions': {
    \     '_': {
    \       'matchers': ['matcher_substring'],
    \     },
    \   },
    \   'kindOptions': {
    \     'file': {
    \       'defaultAction': 'open',
	\		},
	\	},
	\   'uiParams': {
    \     'ff': {
	\		'split': 'floating',
	\		'startFilter': v:false,
    \     }
    \   },
    \ })
autocmd FileType ddu-ff call s:ddu_my_settings()
function! s:ddu_my_settings() abort
  nnoremap <buffer><silent> <CR>
        \ <Cmd>call ddu#ui#ff#do_action('itemAction')<CR>
  nnoremap <buffer><silent> <Space>
        \ <Cmd>call ddu#ui#ff#do_action('toggleSelectItem')<CR>
  nnoremap <buffer><silent> i
        \ <Cmd>call ddu#ui#ff#do_action('openFilterWindow')<CR>
  nnoremap <buffer><silent> q
        \ <Cmd>call ddu#ui#ff#do_action('quit')<CR>
endfunction

autocmd FileType ddu-ff-filter call s:ddu_filter_my_settings()
function! s:ddu_filter_my_settings() abort
  inoremap <buffer><silent> <CR>
  \ <Esc><Cmd>close<CR>
  nnoremap <buffer><silent> <CR>
  \ <Cmd>close<CR>
  nnoremap <buffer><silent> q
  \ <Cmd>close<CR>
endfunction
nnoremap <buffer><silent> <C-k>
	\	<Cmd>Ddu<CR>
'''

[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
nnoremap <C-t> :Ttoggle<CR><Cmd>wincmd j<CR><Cmd>startinsert!<CR>
tnoremap <C-t> <C-\><C-n>:Tclose<CR>
tnoremap jj <C-\><C-n>
let g:neoterm_size = winheight(0)/3
let g:neoterm_default_mod = 'belowright'
augroup AutoTermHeight
	autocmd!
	autocmd VimResized * let g:neoterm_size = winheight(0)/3
augroup END
'''

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'wakatime/vim-wakatime'

[[plugins]]
repo = 'Stoozy/vimcord'

[[plugins]]
repo = 'glacambre/firenvim'
hook_post_update = '''
call firenvim#install(0)
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_add = '''
lua << EOF
require'nvim-treesitter.configs'.setup {
ensure_installed = { "c", "lua", "vim", "cpp"},
sync_install = true,
auto_install = false,
highlight = {
	enable = true,
	},
}
EOF
'''

[[plugins]]
repo = 'stevearc/aerial.nvim'
on_cmd = ['AerialToggle']
hook_post_source = '''
lua << EOF
require('aerial').setup({
on_attach = function(bufnr)
  vim.keymap.set('n', '{', '<cmd>AerialPrev<CR>', {buffer = bufnr})
  vim.keymap.set('n', '}', '<cmd>AerialNext<CR>', {buffer = bufnr})
end
})
vim.keymap.set('n', '<C-h>', '<cmd>AerialToggle! left<CR>')
EOF
'''
